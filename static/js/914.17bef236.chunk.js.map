{"version":3,"file":"static/js/914.17bef236.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/ContactForm/ContactForm.module.css?995f","redux/contacts/contactsSelectors.js","ContactForm/ContactForm.jsx","EditForm/EditForm.jsx","webpack://goit-react-hw-08-phonebook/./src/ContactListItem/ContactListItem.module.css?418e","ContactListItem/ContactListItem.jsx","ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/Filter/Filter.module.css?ab8a","Filter/Filter.jsx","Pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__be1Wd\",\"form\":\"ContactForm_form__j25rM\",\"input\":\"ContactForm_input__27FK9\",\"btn\":\"ContactForm_btn__HaL6u\",\"title\":\"ContactForm_title__1fcWE\",\"link\":\"ContactForm_link__x14P-\"};","export const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;","import { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact} from '../redux/contacts/contactsOperation';\nimport { getContacts } from 'redux/contacts/contactsSelectors';\nimport {FormControl, InputLabel, OutlinedInput, Button, Box} from '@mui/material';\n\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (contacts.find(\n            contact => contact.name.toLowerCase() === name.toLowerCase()\n          )) {\n            return  alert(`${name} is already in contacts`);\n\n            \n            // alert(`${name} is already in contacts`);\n          }\n      dispatch(addContact({name, number}))\n      reset();\n  };\n\n    const reset = () => {\n      setName('');\n      setNumber('');\n  };\n\n  const handleNameChange = evt => {\n    setName(evt.target.value);\n  }\n  \n  const handleNumberChange = evt => {\n    setNumber(evt.target.value);\n  }\n\n      return (\n\n<Box sx={{ p: 2, display: 'flex', justifyContent: 'center' }}>\n<div className={s.container}>\n  {/* <h1 className={s.title}>Login page</h1> */}\n  <form className={s.form}\n      onSubmit={handleSubmit}\n  >\n\n  <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\">\n<InputLabel sx={{color: 'darkviolet'}} color='secondary' htmlFor=\"outlined-adornment-name\" >Name</InputLabel>\n<OutlinedInput\nsx={{color: 'darkviolet'}}\ncolor='secondary'\n  id=\"outlined-adornment-name\"\n  type='text'\n  value={name}\n  onChange={handleNameChange}\n  label=\"Name\"\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n  required\n/>\n</FormControl>      \n<FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\">\n<InputLabel sx={{color: 'darkviolet'}} color='secondary' htmlFor=\"outlined-adornment-number\">Number</InputLabel>\n<OutlinedInput\nsx={{color: 'darkviolet'}}\ncolor='secondary'\n  id=\"outlined-adornment-number\"\n  type='number'\n  value={number}\n  onChange={handleNumberChange}\n  label=\"Number\"\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\nrequired\n/>\n</FormControl> \n<div className={s.btn}>\n<Button sx={{color: 'white', bgcolor: 'tomato'}} color='warning'  type=\"submit\" variant=\"contained\">Add contact</Button>  \n</div>     \n</form> \n</div>\n</Box>\n        )\n}\n","import { Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, IconButton} from \"@mui/material\";\nimport { useState } from \"react\";\nimport { Edit } from \"@mui/icons-material\";\nimport { useDispatch } from 'react-redux';\nimport { editContact } from \"redux/contacts/contactsOperation\";\n\nconst EditForm = ({name, number, id}) => {\n  const [open, setOpen] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [newNumber, setNewNumber] = useState(number);\n  const dispatch = useDispatch();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const changeContacts = (evt) => {\n    evt.preventDefault();\ndispatch(editContact({id, name: newName, number: newNumber}));\nsetOpen(false);\n  }\n\n  const handleNameChange = evt => {\n    setNewName(evt.target.value);\n  }\n  \n  const handleNumberChange = evt => {\n    setNewNumber(evt.target.value);\n  }\n\n  return (\n    <div>\n      <IconButton sx={{ bgcolor: 'tomato', marginRight: '10px' }} onClick={handleClickOpen} aria-label=\"edit\"> <Edit sx={{ color: 'white'}}/></IconButton>\n      \n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle sx={{ textAlign: 'center' }}>Edit your contact</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            value={newName}\n            onChange={handleNameChange}\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n          />\n                    <TextField\n            value={newNumber}\n            onChange={handleNumberChange}\n            margin=\"dense\"\n            id=\"number\"\n            label=\"Number\"\n            type=\"number\"\n            fullWidth\n            variant=\"standard\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button sx={{color: 'white', bgcolor: 'tomato'}} color='warning' variant=\"contained\" onClick={handleClose}>Cancel</Button>\n          <Button sx={{color: 'white', bgcolor: 'tomato'}} color='warning' variant=\"contained\" type='submit' onClick={changeContacts}>Change</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default EditForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"modalBox\":\"ContactListItem_modalBox__9Qo+v\",\"link\":\"ContactListItem_link__DYbjw\"};","import {  ListItem, ListItemAvatar, Avatar, IconButton, Typography } from '@mui/material';\nimport EditForm from 'EditForm/EditForm';\nimport s from '../ContactListItem/ContactListItem.module.css';\nimport { PersonRemove, ContactPhoneOutlined} from '@mui/icons-material';\nimport { useDispatch } from 'react-redux';\nimport {removeContact} from '../redux/contacts/contactsOperation';\n\n\nconst ContactListItem = ({id, name, number}) => {\n\n    const dispatch = useDispatch();\n    return (\n        <ListItem key={id}\n                \n                  secondaryAction={\n                    <div className={s.modalBox}>\n                      <EditForm name={name} number={number} id={id}/>\n                    <IconButton sx={{ bgcolor: 'tomato'}} edge=\"end\" aria-label=\"delete\" onClick={() => dispatch(removeContact(id))}>\n                      <PersonRemove  sx={{ color: 'white'}}/>\n                     \n                    </IconButton>\n                    </div>\n                            }\n                >\n                   \n                  <ListItemAvatar>\n                    <Avatar sx={{bgcolor: 'tomato'}}>\n                      <ContactPhoneOutlined />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <Typography sx={{color: 'darkviolet'}}>\n                  {name}: <a className={s.link} href={`tel:${number}`}>{number}</a></Typography>\n                </ListItem>\n    )\n}\n\nexport default ContactListItem;","// import s from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { List, Box } from '@mui/material';\nimport ContactListItem from '../ContactListItem';\n\nexport default function ContactList() {\n    const contacts = useSelector(state => state.contacts.items);\n    const filter = useSelector(state => state.contacts.filter);\n    const normalizedStr = filter.toLocaleLowerCase();\n\n    const filteredContacts = () => {\n            return contacts.filter(contact => contact.name.toLocaleLowerCase().includes(normalizedStr))\n    }\n\n    const visibleContacts =  filteredContacts();\n    return (\n        <Box sx={{ p: 2, display: 'flex', justifyContent: 'center', }}>\n            {visibleContacts.length !== 0 && <List sx={{width: '50ch'}}>\n                {visibleContacts.map(({id, name, number}) => \n                <ContactListItem key={name} id={id} name={name} number={number}/>)}\n            </List>}\n            \n\n     \n</Box>\n)\n} \n\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__ypGrS\",\"input\":\"Filter_input__EMKNL\",\"title\":\"Filter_title__fT93c\"};","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {filterContaсts} from '../redux/contacts/contactsActions';\nimport {FormControl, InputLabel, OutlinedInput, Box} from '@mui/material';\n\n\nexport default function Filter() {\nconst value = useSelector(state => state.contacts.filter);\nconst dispatch = useDispatch();\n\nconst filterChange = (evt) => {\ndispatch(filterContaсts(evt.currentTarget.value))\n}\n    return (\n        <Box sx={{ p: 2, display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center' }}>\n         <h1 className={s.title}>Filter your contacts</h1>   \n        <FormControl sx={{ m: 1, width: '40ch', borderColor: 'tomato'}} variant=\"outlined\">\n        <InputLabel sx={{color: 'darkviolet'}} color='secondary' htmlFor=\"outlined-adornment-name\" >Find contacts</InputLabel>\n        <OutlinedInput\n        sx={{color: 'darkviolet'}}\n        color='secondary'\n          id=\"outlined-adornment-name\"\n          type='text'\n          value={value}\n          onChange={filterChange}\n        //   label=\"Name\"\n        />\n        </FormControl>  \n        </Box>\n    // <label className={s.label}>Find contacts by name\n    //     <input className={s.input} type=\"text\" name='filter' value={value} onChange={filterChange} />\n    // </label>\n);\n} \n","import ContactForm from \"ContactForm\"\nimport ContactList from \"ContactList\"\nimport Filter from \"Filter\"\n// import Modal from \"Modal\";\n// import Section from \"Section\";\n// import { useDispatch } from \"react-redux\";\n// import { useEffect } from \"react\";\n// import { getCurrentUser } from \"redux/auth\";\n\n\nconst ContactsPage = () => {\n\n    return (\n        <>\n        {/* <Section> */}\n        <ContactForm/>\n        {/* </Section> */}\n        {/* <Section title=\"Contacts\"> */}\n        <Filter/>\n        <ContactList/>\n        {/* <Modal></Modal> */}\n        {/* </Section> */}\n        </>\n\n    )\n};\n\nexport default ContactsPage;"],"names":["getContacts","state","contacts","items","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","reset","Box","sx","p","display","justifyContent","className","s","onSubmit","evt","preventDefault","find","contact","toLowerCase","alert","addContact","FormControl","m","width","variant","InputLabel","color","htmlFor","OutlinedInput","id","type","value","onChange","target","label","pattern","title","required","Button","bgcolor","open","setOpen","newName","setNewName","newNumber","setNewNumber","handleClose","IconButton","marginRight","onClick","Edit","Dialog","onClose","DialogTitle","textAlign","DialogContent","TextField","autoFocus","margin","fullWidth","DialogActions","editContact","ListItem","secondaryAction","edge","removeContact","PersonRemove","ListItemAvatar","Avatar","ContactPhoneOutlined","Typography","href","ContactList","normalizedStr","filter","toLocaleLowerCase","visibleContacts","includes","length","List","map","Filter","flexDirection","alignItems","borderColor","filterContaсts","currentTarget"],"sourceRoot":""}